// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/openvpn/bulk/groups/actions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform actions on multiple groups (enable/disable)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bulk Operations"
                ],
                "summary": "Bulk group actions",
                "parameters": [
                    {
                        "description": "Bulk group actions data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BulkGroupActionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BulkGroupActionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/groups/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create multiple groups at once",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bulk Operations"
                ],
                "summary": "Bulk create groups",
                "parameters": [
                    {
                        "description": "Bulk group creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BulkCreateGroupsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.BulkCreateGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/groups/import": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Import groups from CSV, JSON, or XLSX file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bulk Operations"
                ],
                "summary": "Import groups from file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Groups file (CSV/JSON/XLSX)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "csv",
                            "json",
                            "xlsx"
                        ],
                        "type": "string",
                        "description": "File format",
                        "name": "format",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Dry run mode (validate only)",
                        "name": "dryRun",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Override existing groups",
                        "name": "override",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ImportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/groups/template": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Download template file for group import",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Bulk Operations"
                ],
                "summary": "Export group template",
                "parameters": [
                    {
                        "enum": [
                            "csv",
                            "xlsx"
                        ],
                        "type": "string",
                        "default": "csv",
                        "description": "Template format",
                        "name": "format",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group template file",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/actions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform actions on multiple users (enable/disable/reset-otp)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bulk Operations"
                ],
                "summary": "Bulk user actions",
                "parameters": [
                    {
                        "description": "Bulk user actions data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BulkUserActionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BulkActionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create multiple users at once",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bulk Operations"
                ],
                "summary": "Bulk create users",
                "parameters": [
                    {
                        "description": "Bulk user creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BulkCreateUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.BulkCreateUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "Request too large",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/disconnect": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Disconnect multiple users from VPN with business logic validation (user exists and is connected)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bulk Operations"
                ],
                "summary": "Bulk disconnect multiple VPN users",
                "parameters": [
                    {
                        "description": "Bulk disconnect users request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BulkDisconnectUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users disconnected successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.DisconnectResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - validation error or no valid users",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing authentication",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to disconnect users",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/extend": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Extend expiration date for multiple users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bulk Operations"
                ],
                "summary": "Bulk extend user expiration",
                "parameters": [
                    {
                        "description": "Bulk user extension data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BulkUserExtendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BulkActionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/import": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Import users from CSV, JSON, or XLSX file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bulk Operations"
                ],
                "summary": "Import users from file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Users file (CSV/JSON/XLSX)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "csv",
                            "json",
                            "xlsx"
                        ],
                        "type": "string",
                        "description": "File format",
                        "name": "format",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Dry run mode (validate only)",
                        "name": "dryRun",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Override existing users",
                        "name": "override",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ImportResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "File too large",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/bulk/users/template": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Download template file for user import",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Bulk Operations"
                ],
                "summary": "Export user template",
                "parameters": [
                    {
                        "enum": [
                            "csv",
                            "xlsx"
                        ],
                        "type": "string",
                        "default": "csv",
                        "description": "Template format",
                        "name": "format",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User template file",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/openvpn/cache/flush": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Clear all cached data from Redis",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Flush cache",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/openvpn/cache/flush/category": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Clear specific categories of cached data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Flush specific cache categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cache category (users|groups|config|filters|expirations|all)",
                        "name": "category",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/openvpn/cache/health": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform comprehensive cache health check",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Check cache health",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/openvpn/cache/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed cache statistics and metrics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Get cache statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/openvpn/cache/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Redis cache status, connection health, and statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Get cache status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/openvpn/cache/warmup": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Pre-load frequently accessed data into cache",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Warm up cache",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/openvpn/config/network": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get comprehensive network configuration including client networks, VPN daemon settings, routing, and NAT configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Get network configuration",
                "responses": {
                    "200": {
                        "description": "Network configuration retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.NetworkConfigResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing authentication",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to retrieve network config",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/config/server/info": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get basic server information including node type, ports, and cluster configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configuration"
                ],
                "summary": "Get server information",
                "responses": {
                    "200": {
                        "description": "Server information retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.ServerInfoResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing authentication",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to retrieve server info",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/groups": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List groups with pagination and filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "List groups",
                "parameters": [
                    {
                        "type": "string",
                        "name": "authMethod",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "groupName",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "role",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.GroupListResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new VPN user group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Create a new group",
                "parameters": [
                    {
                        "description": "Group creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/groups/{groupName}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get group information by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Get group by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.GroupResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update group information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Update group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Group update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete group by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Delete group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/groups/{groupName}/{action}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Enable or disable a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Groups"
                ],
                "summary": "Perform action on group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Action (enable/disable)",
                        "name": "action",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/search/analytics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get analytics about search usage and patterns",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Search"
                ],
                "summary": "Get search analytics",
                "parameters": [
                    {
                        "enum": [
                            "day",
                            "week",
                            "month"
                        ],
                        "type": "string",
                        "default": "week",
                        "description": "Analytics period",
                        "name": "period",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search analytics data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/openvpn/search/export": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Export advanced search results to file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Advanced Search"
                ],
                "summary": "Export search results",
                "parameters": [
                    {
                        "enum": [
                            "csv",
                            "xlsx",
                            "json"
                        ],
                        "type": "string",
                        "default": "csv",
                        "description": "Export format",
                        "name": "format",
                        "in": "query"
                    },
                    {
                        "description": "Search criteria for export",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdvancedUserSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exported search results",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/api/openvpn/search/groups": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search groups with complex filters and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Search"
                ],
                "summary": "Advanced group search",
                "parameters": [
                    {
                        "description": "Advanced search criteria",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdvancedGroupSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AdvancedGroupSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/search/quick": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform a quick text search across users and groups",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Search"
                ],
                "summary": "Quick search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "users",
                            "groups",
                            "all"
                        ],
                        "type": "string",
                        "default": "all",
                        "description": "Search type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Result limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quick search results",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/openvpn/search/saved": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get list of saved searches for current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Search"
                ],
                "summary": "Get saved searches",
                "parameters": [
                    {
                        "enum": [
                            "users",
                            "groups"
                        ],
                        "type": "string",
                        "description": "Filter by search type",
                        "name": "searchType",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include public saved searches",
                        "name": "includePublic",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SavedSearchResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Save frequently used search criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Search"
                ],
                "summary": "Save search query",
                "parameters": [
                    {
                        "description": "Search to save",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SavedSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.SavedSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/search/saved/{searchId}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a saved search",
                "tags": [
                    "Advanced Search"
                ],
                "summary": "Delete saved search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Saved search ID",
                        "name": "searchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/search/saved/{searchId}/execute": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Execute a previously saved search",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Search"
                ],
                "summary": "Execute saved search",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Saved search ID",
                        "name": "searchId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group search results",
                        "schema": {
                            "$ref": "#/definitions/dto.AdvancedGroupSearchResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/search/suggestions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get autocomplete suggestions for search fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Search"
                ],
                "summary": "Get search suggestions",
                "parameters": [
                    {
                        "description": "Search suggestions criteria",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchSuggestionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SearchSuggestionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/search/users": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search users with complex filters and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Advanced Search"
                ],
                "summary": "Advanced user search",
                "parameters": [
                    {
                        "description": "Advanced search criteria",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AdvancedUserSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AdvancedUserSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a paginated list of users with comprehensive filtering options",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "List users with enhanced filtering",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by username (supports partial match)",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email (supports partial match)",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ldap",
                            "local"
                        ],
                        "type": "string",
                        "description": "Filter by auth method",
                        "name": "authMethod",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "Admin",
                            "User"
                        ],
                        "type": "string",
                        "description": "Filter by role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by group name",
                        "name": "groupName",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by enabled status",
                        "name": "isEnabled",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by access denial status",
                        "name": "denyAccess",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by MFA status",
                        "name": "mfaEnabled",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Users expiring after date (YYYY-MM-DD)",
                        "name": "userExpirationAfter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Users expiring before date (YYYY-MM-DD)",
                        "name": "userExpirationBefore",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Include expired users",
                        "name": "includeExpired",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Users expiring within X days",
                        "name": "expiringInDays",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by access control presence",
                        "name": "hasAccessControl",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by MAC address",
                        "name": "macAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by IP address",
                        "name": "ipAddress",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search across username, email, group",
                        "name": "searchText",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "username",
                            "email",
                            "authMethod",
                            "role",
                            "groupName",
                            "userExpiration"
                        ],
                        "type": "string",
                        "default": "username",
                        "description": "Sort field",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "asc",
                        "description": "Sort order",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page (max 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Use exact matching instead of partial",
                        "name": "exactMatch",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Case sensitive search",
                        "name": "caseSensitive",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new VPN user (local or LDAP authentication)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/users/expirations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get users that will expire in the specified number of days with complete user details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get expiring users with full information",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 7,
                        "description": "Number of days to check for expiration",
                        "name": "days",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include already expired users",
                        "name": "includeExpired",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserExpirationsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/users/{username}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a user and associated resources",
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/users/{username}/disconnect": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Disconnect a specific user from VPN with business logic validation (user exists and is connected)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Disconnect a single VPN user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username to disconnect",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Disconnect user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DisconnectUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User disconnected successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.DisconnectResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - user not found or not connected",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing authentication",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found in system",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to disconnect user",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/users/{username}/{action}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Perform actions like enable, disable, reset-otp, change-password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Perform user action",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "enable",
                            "disable",
                            "reset-otp",
                            "change-password"
                        ],
                        "type": "string",
                        "description": "Action",
                        "name": "action",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Required only for change-password action",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/openvpn/vpn/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed VPN server status including all connected users with their public IPs, connection times, countries, and traffic statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VPN Status"
                ],
                "summary": "Get comprehensive VPN server status",
                "responses": {
                    "200": {
                        "description": "Successful response with VPN status",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.VPNStatusResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized - invalid or missing authentication",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error - failed to retrieve VPN status",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/validate": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Validate the current access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Validate access token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AdvancedGroupSearchRequest": {
            "type": "object",
            "properties": {
                "accessControlPattern": {
                    "type": "string",
                    "example": "192.168.1.0/24"
                },
                "authMethod": {
                    "type": "string",
                    "enum": [
                        "ldap",
                        "local"
                    ],
                    "example": "local"
                },
                "createdAfter": {
                    "description": "Date range filters",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "createdBefore": {
                    "type": "string",
                    "example": "2024-12-31T23:59:59Z"
                },
                "exactMatch": {
                    "type": "boolean",
                    "example": false
                },
                "groupName": {
                    "description": "Basic filters",
                    "type": "string",
                    "example": "TEST"
                },
                "hasAccessControl": {
                    "description": "Access control filters",
                    "type": "boolean",
                    "example": true
                },
                "hasMFA": {
                    "type": "boolean",
                    "example": true
                },
                "hasMembers": {
                    "type": "boolean",
                    "example": true
                },
                "includeDisabled": {
                    "description": "Advanced options",
                    "type": "boolean",
                    "example": false
                },
                "includeMemberCount": {
                    "type": "boolean",
                    "example": true
                },
                "isEnabled": {
                    "description": "Status filters",
                    "type": "boolean",
                    "example": true
                },
                "limit": {
                    "type": "integer",
                    "maximum": 500,
                    "minimum": 1,
                    "example": 25
                },
                "maxMemberCount": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 100
                },
                "minMemberCount": {
                    "description": "Member count filters",
                    "type": "integer",
                    "minimum": 0,
                    "example": 1
                },
                "page": {
                    "description": "Pagination",
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Admin",
                        "User"
                    ],
                    "example": "User"
                },
                "searchText": {
                    "description": "Text search",
                    "type": "string",
                    "example": "admin"
                },
                "sortBy": {
                    "description": "Sorting",
                    "type": "string",
                    "enum": [
                        "groupName",
                        "authMethod",
                        "role",
                        "memberCount",
                        "createdAt"
                    ],
                    "example": "groupName"
                },
                "sortOrder": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "example": "asc"
                }
            }
        },
        "dto.AdvancedGroupSearchResponse": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/dto.AdvancedGroupSearchRequest"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EnhancedGroupResponse"
                    }
                },
                "limit": {
                    "type": "integer",
                    "example": 25
                },
                "metadata": {
                    "$ref": "#/definitions/dto.GroupSearchMetadata"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 25
                },
                "totalPages": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.AdvancedUserSearchRequest": {
            "type": "object",
            "properties": {
                "accessControlPattern": {
                    "type": "string",
                    "example": "192.168.1.0/24"
                },
                "authMethod": {
                    "type": "string",
                    "enum": [
                        "ldap",
                        "local"
                    ],
                    "example": "local"
                },
                "createdAfter": {
                    "description": "Date range filters",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "createdBefore": {
                    "type": "string",
                    "example": "2024-12-31T23:59:59Z"
                },
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "exactMatch": {
                    "type": "boolean",
                    "example": false
                },
                "expirationAfter": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "expirationBefore": {
                    "type": "string",
                    "example": "2024-12-31T23:59:59Z"
                },
                "expiringInDays": {
                    "type": "integer",
                    "maximum": 365,
                    "minimum": 0,
                    "example": 30
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GROUP"
                },
                "hasAccessControl": {
                    "description": "Access control filters",
                    "type": "boolean",
                    "example": true
                },
                "hasMFA": {
                    "type": "boolean",
                    "example": true
                },
                "hasMacAddress": {
                    "description": "MAC address filters",
                    "type": "boolean",
                    "example": true
                },
                "includeDisabled": {
                    "description": "Advanced options",
                    "type": "boolean",
                    "example": false
                },
                "isEnabled": {
                    "description": "Status filters",
                    "type": "boolean",
                    "example": true
                },
                "isExpired": {
                    "description": "Expiration filters",
                    "type": "boolean",
                    "example": false
                },
                "limit": {
                    "type": "integer",
                    "maximum": 1000,
                    "minimum": 1,
                    "example": 25
                },
                "macAddressPattern": {
                    "type": "string",
                    "example": "00:11:22"
                },
                "page": {
                    "description": "Pagination",
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Admin",
                        "User"
                    ],
                    "example": "User"
                },
                "searchText": {
                    "description": "Text search",
                    "type": "string",
                    "example": "admin"
                },
                "sortBy": {
                    "description": "Sorting",
                    "type": "string",
                    "enum": [
                        "username",
                        "email",
                        "authMethod",
                        "role",
                        "groupName",
                        "userExpiration"
                    ],
                    "example": "username"
                },
                "sortOrder": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "example": "asc"
                },
                "username": {
                    "description": "Basic filters",
                    "type": "string",
                    "example": "testuser"
                }
            }
        },
        "dto.AdvancedUserSearchResponse": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/dto.AdvancedUserSearchRequest"
                },
                "limit": {
                    "type": "integer",
                    "example": 25
                },
                "metadata": {
                    "$ref": "#/definitions/dto.UserSearchMetadata"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 150
                },
                "totalPages": {
                    "type": "integer",
                    "example": 6
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                }
            }
        },
        "dto.BulkActionResponse": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer",
                    "example": 2
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.BulkUserOperationResult"
                    }
                },
                "success": {
                    "type": "integer",
                    "example": 8
                },
                "total": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "dto.BulkCreateGroupsRequest": {
            "type": "object",
            "required": [
                "groups"
            ],
            "properties": {
                "groups": {
                    "type": "array",
                    "maxItems": 50,
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/dto.CreateGroupRequest"
                    }
                }
            }
        },
        "dto.BulkCreateGroupsResponse": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer",
                    "example": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.BulkGroupOperationResult"
                    }
                },
                "success": {
                    "type": "integer",
                    "example": 4
                },
                "total": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "dto.BulkCreateUsersRequest": {
            "type": "object",
            "required": [
                "users"
            ],
            "properties": {
                "users": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/dto.CreateUserRequest"
                    }
                }
            }
        },
        "dto.BulkCreateUsersResponse": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer",
                    "example": 2
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.BulkUserOperationResult"
                    }
                },
                "success": {
                    "type": "integer",
                    "example": 8
                },
                "total": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "dto.BulkDisconnectUsersRequest": {
            "type": "object",
            "required": [
                "usernames"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "Maintenance disconnect"
                },
                "usernames": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"testuser1\"",
                        " \"testuser2\"]"
                    ]
                }
            }
        },
        "dto.BulkGroupActionResponse": {
            "type": "object",
            "properties": {
                "failed": {
                    "type": "integer",
                    "example": 1
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.BulkGroupOperationResult"
                    }
                },
                "success": {
                    "type": "integer",
                    "example": 4
                },
                "total": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "dto.BulkGroupActionsRequest": {
            "type": "object",
            "required": [
                "action",
                "groupNames"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable"
                    ]
                },
                "groupNames": {
                    "type": "array",
                    "maxItems": 50,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.BulkGroupOperationResult": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GROUP"
                },
                "message": {
                    "type": "string",
                    "example": "Group created successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "dto.BulkUserActionsRequest": {
            "type": "object",
            "required": [
                "action",
                "usernames"
            ],
            "properties": {
                "action": {
                    "type": "string",
                    "enum": [
                        "enable",
                        "disable",
                        "reset-otp"
                    ]
                },
                "usernames": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.BulkUserExtendRequest": {
            "type": "object",
            "required": [
                "newExpiration",
                "usernames"
            ],
            "properties": {
                "newExpiration": {
                    "type": "string"
                },
                "usernames": {
                    "type": "array",
                    "maxItems": 100,
                    "minItems": 1,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.BulkUserOperationResult": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "type": "string",
                    "example": "User created successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "username": {
                    "type": "string",
                    "example": "testuser"
                }
            }
        },
        "dto.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "NewSecurePass123!"
                }
            }
        },
        "dto.ConnectedUserResponse": {
            "type": "object",
            "properties": {
                "bytes_received": {
                    "type": "integer",
                    "example": 1048576
                },
                "bytes_sent": {
                    "type": "integer",
                    "example": 2097152
                },
                "client_id": {
                    "type": "string",
                    "example": "5"
                },
                "common_name": {
                    "type": "string",
                    "example": "user123"
                },
                "connected_since": {
                    "type": "string",
                    "example": "2025-06-14T14:30:25Z"
                },
                "connected_since_unix": {
                    "type": "integer",
                    "example": 1749910225
                },
                "connection_duration": {
                    "type": "string",
                    "example": "37m41s"
                },
                "country": {
                    "type": "string",
                    "example": "Vietnam"
                },
                "data_channel_cipher": {
                    "type": "string",
                    "example": "AES-256-GCM"
                },
                "peer_id": {
                    "type": "string",
                    "example": "12"
                },
                "real_address": {
                    "type": "string",
                    "example": "203.113.45.123"
                },
                "username": {
                    "type": "string",
                    "example": "user123"
                },
                "virtual_address": {
                    "type": "string",
                    "example": "172.27.232.15"
                },
                "virtual_ipv6_address": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "dto.CreateGroupRequest": {
            "type": "object",
            "required": [
                "authMethod",
                "groupName"
            ],
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authMethod": {
                    "type": "string",
                    "enum": [
                        "ldap",
                        "local"
                    ]
                },
                "groupName": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "groupRange": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupSubnet": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "User",
                        "Admin"
                    ]
                }
            }
        },
        "dto.CreateUserRequest": {
            "type": "object",
            "required": [
                "authMethod",
                "email",
                "ipAssignMode",
                "macAddresses",
                "userExpiration",
                "username"
            ],
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "192.168.1.0/24"
                    ]
                },
                "authMethod": {
                    "type": "string",
                    "enum": [
                        "ldap",
                        "local"
                    ],
                    "example": "local"
                },
                "email": {
                    "type": "string",
                    "example": "testuser@example.com"
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GR"
                },
                "ipAddress": {
                    "type": "string",
                    "example": "10.0.0.10"
                },
                "ipAssignMode": {
                    "type": "string",
                    "enum": [
                        "dynamic",
                        "static"
                    ],
                    "example": "static"
                },
                "macAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "5E:CD:C9:D4:88:65"
                    ]
                },
                "password": {
                    "type": "string",
                    "example": "SecurePass123!"
                },
                "userExpiration": {
                    "type": "string",
                    "example": "31/12/2024"
                },
                "username": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 3,
                    "example": "testuser"
                }
            }
        },
        "dto.DisconnectResponse": {
            "type": "object",
            "properties": {
                "connection_info": {
                    "$ref": "#/definitions/dto.UserConnectionInfo"
                },
                "count": {
                    "type": "integer",
                    "example": 2
                },
                "disconnected_users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"testuser1\"",
                        " \"testuser2\"]"
                    ]
                },
                "message": {
                    "type": "string",
                    "example": "Users disconnected successfully"
                },
                "skipped_users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"offline_user\"]"
                    ]
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "total_requested": {
                    "type": "integer",
                    "example": 3
                },
                "validation_errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserValidationError"
                    }
                }
            }
        },
        "dto.DisconnectUserRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "Session terminated by administrator"
                }
            }
        },
        "dto.EnhancedGroupResponse": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authMethod": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "denyAccess": {
                    "type": "boolean"
                },
                "groupName": {
                    "type": "string"
                },
                "groupRange": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupSubnet": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastModified": {
                    "type": "string",
                    "example": "2024-03-10T14:22:00Z"
                },
                "lastUsed": {
                    "type": "string",
                    "example": "2024-06-01T08:15:00Z"
                },
                "memberCount": {
                    "type": "integer",
                    "example": 15
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string",
                            "example": "BAD_REQUEST"
                        },
                        "details": {
                            "type": "string",
                            "example": "validation failed"
                        },
                        "message": {
                            "type": "string",
                            "example": "Invalid request format"
                        },
                        "status": {
                            "type": "integer",
                            "example": 400
                        }
                    }
                }
            }
        },
        "dto.ExpirationStatistics": {
            "type": "object",
            "properties": {
                "expiredCount": {
                    "type": "integer",
                    "example": 5
                },
                "expiringIn30Days": {
                    "type": "integer",
                    "example": 25
                },
                "expiringIn7Days": {
                    "type": "integer",
                    "example": 10
                },
                "expiringIn90Days": {
                    "type": "integer",
                    "example": 45
                }
            }
        },
        "dto.FilterMetadata": {
            "type": "object",
            "properties": {
                "appliedFilters": {
                    "description": "List of applied filters",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "username",
                        "authMethod",
                        "isEnabled"
                    ]
                },
                "filterCount": {
                    "description": "Number of active filters",
                    "type": "integer",
                    "example": 3
                },
                "sortOrder": {
                    "description": "Current sort order",
                    "type": "string",
                    "example": "asc"
                },
                "sortedBy": {
                    "description": "Current sort field",
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "dto.GroupListResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GroupResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.GroupResponse": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authMethod": {
                    "type": "string"
                },
                "denyAccess": {
                    "type": "boolean"
                },
                "groupName": {
                    "type": "string"
                },
                "groupRange": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupSubnet": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "dto.GroupSearchMetadata": {
            "type": "object",
            "properties": {
                "authMethodStats": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "filteredTotal": {
                    "type": "integer",
                    "example": 25
                },
                "memberCountStats": {
                    "$ref": "#/definitions/dto.MemberCountStatistics"
                },
                "roleStats": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "searchDuration": {
                    "type": "string",
                    "example": "45ms"
                },
                "unfilteredTotal": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "dto.ImportResponse": {
            "type": "object",
            "properties": {
                "dryRun": {
                    "type": "boolean",
                    "example": false
                },
                "failureCount": {
                    "type": "integer",
                    "example": 5
                },
                "invalidRecords": {
                    "type": "integer",
                    "example": 5
                },
                "processedRecords": {
                    "type": "integer",
                    "example": 95
                },
                "results": {
                    "description": "BulkCreateUsersResponse or BulkCreateGroupsResponse"
                },
                "successCount": {
                    "type": "integer",
                    "example": 90
                },
                "total": {
                    "type": "integer",
                    "example": 100
                },
                "validRecords": {
                    "type": "integer",
                    "example": 95
                },
                "validationErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ImportValidationError"
                    }
                }
            }
        },
        "dto.ImportValidationError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "example": "email"
                },
                "message": {
                    "type": "string",
                    "example": "Invalid email format"
                },
                "row": {
                    "type": "integer",
                    "example": 3
                },
                "value": {
                    "type": "string",
                    "example": "invalid-email"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 1
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserInfo"
                }
            }
        },
        "dto.MemberCountStatistics": {
            "type": "object",
            "properties": {
                "averageSize": {
                    "type": "number",
                    "example": 12.5
                },
                "emptyGroups": {
                    "type": "integer",
                    "example": 3
                },
                "largeGroups": {
                    "description": "50+ members",
                    "type": "integer",
                    "example": 4
                },
                "maxSize": {
                    "type": "integer",
                    "example": 75
                },
                "mediumGroups": {
                    "description": "11-50 members",
                    "type": "integer",
                    "example": 8
                },
                "smallGroups": {
                    "description": "1-10 members",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "dto.MessageResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "example": "Operation completed successfully"
                        },
                        "status": {
                            "type": "integer",
                            "example": 200
                        }
                    }
                }
            }
        },
        "dto.NetworkConfigResponse": {
            "type": "object",
            "properties": {
                "allow_private_nets6_to_clients": {
                    "type": "boolean",
                    "example": true
                },
                "allow_private_nets_to_clients": {
                    "description": "Advanced Network Settings",
                    "type": "boolean",
                    "example": true
                },
                "client_netmask_bits": {
                    "type": "string",
                    "example": "20"
                },
                "client_network": {
                    "description": "Client Network Settings",
                    "type": "string",
                    "example": "172.27.224.0"
                },
                "group_pool": {
                    "type": "string",
                    "example": "172.27.240.0/20"
                },
                "inter_client": {
                    "type": "boolean",
                    "example": false
                },
                "listen_ip": {
                    "type": "string",
                    "example": "all"
                },
                "message": {
                    "type": "string",
                    "example": "Network config retrieved successfully"
                },
                "mss_fix": {
                    "type": "string",
                    "example": "1350"
                },
                "mtu": {
                    "description": "Network Performance",
                    "type": "string",
                    "example": "1420"
                },
                "nat6_enabled": {
                    "type": "boolean",
                    "example": true
                },
                "nat6_masquerade": {
                    "type": "boolean",
                    "example": false
                },
                "nat_enabled": {
                    "description": "NAT Settings",
                    "type": "boolean",
                    "example": true
                },
                "nat_masquerade": {
                    "type": "boolean",
                    "example": false
                },
                "osi_layer": {
                    "type": "string",
                    "example": "3"
                },
                "private_access": {
                    "type": "string",
                    "example": "no"
                },
                "protocol": {
                    "type": "string",
                    "example": "tcp"
                },
                "reroute_dns": {
                    "type": "boolean",
                    "example": true
                },
                "reroute_gateway": {
                    "description": "Routing Settings",
                    "type": "boolean",
                    "example": true
                },
                "server_ip": {
                    "type": "string",
                    "example": "all"
                },
                "status": {
                    "description": "Status",
                    "type": "string",
                    "example": "optimal"
                },
                "tcp_port": {
                    "description": "VPN Daemon Settings",
                    "type": "string",
                    "example": "443"
                },
                "udp_port": {
                    "type": "string",
                    "example": "1194"
                }
            }
        },
        "dto.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refreshToken"
            ],
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "dto.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserInfo"
                }
            }
        },
        "dto.SavedSearchRequest": {
            "type": "object",
            "required": [
                "name",
                "searchType"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Users expiring in the next 30 days"
                },
                "filters": {},
                "isPublic": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "example": "Expiring Users Next Month"
                },
                "searchType": {
                    "type": "string",
                    "enum": [
                        "users",
                        "groups"
                    ],
                    "example": "users"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.SavedSearchResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "example": "2024-01-15T10:30:00Z"
                },
                "createdBy": {
                    "type": "string",
                    "example": "admin"
                },
                "description": {
                    "type": "string",
                    "example": "Users expiring in the next 30 days"
                },
                "filters": {},
                "id": {
                    "description": "Keep both for compatibility",
                    "type": "string",
                    "example": "search_123"
                },
                "isPublic": {
                    "type": "boolean",
                    "example": false
                },
                "lastUsed": {
                    "type": "string",
                    "example": "2024-06-01T08:15:00Z"
                },
                "name": {
                    "type": "string",
                    "example": "Expiring Users Next Month"
                },
                "searchId": {
                    "type": "string",
                    "example": "search_123"
                },
                "searchType": {
                    "type": "string",
                    "example": "users"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "useCount": {
                    "type": "integer",
                    "example": 15
                }
            }
        },
        "dto.SearchSuggestion": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "User: testuser (test@example.com)"
                },
                "label": {
                    "type": "string",
                    "example": "testuser (test@example.com)"
                },
                "matchCount": {
                    "type": "integer",
                    "example": 1
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string",
                    "example": "testuser"
                },
                "type": {
                    "type": "string",
                    "example": "username"
                },
                "value": {
                    "type": "string",
                    "example": "testuser"
                }
            }
        },
        "dto.SearchSuggestionsRequest": {
            "type": "object",
            "required": [
                "query",
                "searchType"
            ],
            "properties": {
                "field": {
                    "type": "string",
                    "enum": [
                        "username",
                        "email",
                        "groupName"
                    ],
                    "example": "username"
                },
                "limit": {
                    "type": "integer",
                    "maximum": 20,
                    "minimum": 1,
                    "example": 10
                },
                "query": {
                    "type": "string",
                    "minLength": 1,
                    "example": "test"
                },
                "searchType": {
                    "type": "string",
                    "enum": [
                        "users",
                        "groups"
                    ],
                    "example": "users"
                }
            }
        },
        "dto.SearchSuggestionsResponse": {
            "type": "object",
            "properties": {
                "suggestions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SearchSuggestion"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "dto.ServerInfoResponse": {
            "type": "object",
            "properties": {
                "admin_ip_address": {
                    "type": "string",
                    "example": "all"
                },
                "admin_port": {
                    "type": "string",
                    "example": "943"
                },
                "client_ip_address": {
                    "type": "string",
                    "example": "all"
                },
                "client_port": {
                    "type": "string",
                    "example": "943"
                },
                "cluster_mode": {
                    "type": "string",
                    "example": "False"
                },
                "failover_mode": {
                    "type": "string",
                    "example": "none"
                },
                "license_server": {
                    "type": "string",
                    "example": "licensing.openvpn.net:443"
                },
                "message": {
                    "type": "string",
                    "example": "Server info retrieved successfully"
                },
                "node_type": {
                    "type": "string",
                    "example": "PRIMARY"
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                },
                "web_server_name": {
                    "type": "string",
                    "example": "OpenVPN-AS"
                }
            }
        },
        "dto.SuccessResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "object",
                    "properties": {
                        "data": {},
                        "message": {
                            "type": "string",
                            "example": "Operation successful"
                        },
                        "status": {
                            "type": "integer",
                            "example": 200
                        }
                    }
                }
            }
        },
        "dto.UpdateGroupRequest": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "denyAccess": {
                    "type": "boolean"
                },
                "groupRange": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "groupSubnet": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "User",
                        "Admin"
                    ]
                }
            }
        },
        "dto.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "192.168.1.0/24"
                    ]
                },
                "denyAccess": {
                    "type": "boolean",
                    "example": false
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GR"
                },
                "ipAddress": {
                    "type": "string",
                    "example": "10.0.0.10"
                },
                "ipAssignMode": {
                    "type": "string",
                    "enum": [
                        "dynamic",
                        "static"
                    ],
                    "example": "static"
                },
                "macAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "5E:CD:C9:D4:88:65"
                    ]
                },
                "userExpiration": {
                    "type": "string",
                    "example": "31/12/2025"
                }
            }
        },
        "dto.UserConnectionInfo": {
            "type": "object",
            "properties": {
                "connected_since": {
                    "type": "string",
                    "example": "2025-06-14T14:30:25Z"
                },
                "country": {
                    "type": "string",
                    "example": "Vietnam"
                },
                "real_address": {
                    "type": "string",
                    "example": "203.113.45.123"
                },
                "username": {
                    "type": "string",
                    "example": "testuser1"
                },
                "virtual_address": {
                    "type": "string",
                    "example": "172.27.232.15"
                }
            }
        },
        "dto.UserExpirationInfo": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authMethod": {
                    "type": "string"
                },
                "daysUntilExpiry": {
                    "description": "Số ngày còn lại",
                    "type": "integer"
                },
                "denyAccess": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "expirationStatus": {
                    "description": "\"expired\", \"expiring\", \"warning\"",
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "macAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mfa": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                },
                "userExpiration": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserExpirationsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "days": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserExpirationInfo"
                    }
                }
            }
        },
        "dto.UserFilter": {
            "type": "object",
            "properties": {
                "authMethod": {
                    "type": "string",
                    "enum": [
                        "ldap",
                        "local"
                    ],
                    "example": "local"
                },
                "caseSensitive": {
                    "description": "Case sensitive search",
                    "type": "boolean",
                    "example": false
                },
                "denyAccess": {
                    "description": "Filter by access denial status",
                    "type": "boolean",
                    "example": false
                },
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "exactMatch": {
                    "description": "NEW: Search options",
                    "type": "boolean",
                    "example": false
                },
                "expiringInDays": {
                    "description": "Users expiring within X days",
                    "type": "integer",
                    "minimum": 0,
                    "example": 7
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GR"
                },
                "hasAccessControl": {
                    "description": "NEW: Advanced filters",
                    "type": "boolean",
                    "example": true
                },
                "includeExpired": {
                    "description": "Include expired users",
                    "type": "boolean",
                    "example": true
                },
                "ipAddress": {
                    "type": "string",
                    "example": "10.10.10.10"
                },
                "isEnabled": {
                    "description": "NEW: Status filters",
                    "type": "boolean",
                    "example": true
                },
                "limit": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "example": 20
                },
                "macAddress": {
                    "description": "Filter by MAC address",
                    "type": "string",
                    "example": "5E:CD:C9:D4:88:65"
                },
                "mfaEnabled": {
                    "description": "Filter by MFA status",
                    "type": "boolean",
                    "example": true
                },
                "page": {
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Admin",
                        "User"
                    ],
                    "example": "User"
                },
                "searchText": {
                    "description": "Search across username, email, group",
                    "type": "string",
                    "minLength": 2,
                    "example": "john"
                },
                "sortBy": {
                    "description": "Enhanced sorting \u0026 pagination",
                    "type": "string",
                    "enum": [
                        "username",
                        "email",
                        "authMethod",
                        "role",
                        "groupName",
                        "userExpiration"
                    ],
                    "example": "username"
                },
                "sortOrder": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ],
                    "example": "asc"
                },
                "userExpirationAfter": {
                    "description": "NEW: Expiration filters",
                    "type": "string",
                    "example": "2025-06-17"
                },
                "userExpirationBefore": {
                    "description": "Users expiring before date",
                    "type": "string",
                    "example": "2025-06-22"
                },
                "username": {
                    "description": "Basic filters (existing)",
                    "type": "string",
                    "example": "testuser"
                }
            }
        },
        "dto.UserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.UserListResponse": {
            "type": "object",
            "properties": {
                "filters": {
                    "description": "NEW: Applied filters",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserFilter"
                        }
                    ]
                },
                "limit": {
                    "type": "integer",
                    "example": 20
                },
                "metadata": {
                    "description": "NEW: Filter metadata",
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.FilterMetadata"
                        }
                    ]
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "total": {
                    "type": "integer",
                    "example": 50
                },
                "totalPages": {
                    "description": "NEW: Total pages",
                    "type": "integer",
                    "example": 3
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserResponse"
                    }
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "properties": {
                "accessControl": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "192.168.1.0/24"
                    ]
                },
                "authMethod": {
                    "type": "string",
                    "example": "local"
                },
                "daysUntilExpiration": {
                    "description": "Days until expiration (-1 if expired)",
                    "type": "integer",
                    "example": 30
                },
                "denyAccess": {
                    "type": "boolean",
                    "example": false
                },
                "email": {
                    "type": "string",
                    "example": "testuser@example.com"
                },
                "groupName": {
                    "type": "string",
                    "example": "TEST_GR"
                },
                "ipAddress": {
                    "type": "string",
                    "example": "10.0.0.10"
                },
                "isEnabled": {
                    "description": "NEW: Computed fields for enhanced filtering",
                    "type": "boolean",
                    "example": true
                },
                "isExpired": {
                    "description": "Whether user is past expiration",
                    "type": "boolean",
                    "example": false
                },
                "macAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "5E:CD:C9:D4:88:65"
                    ]
                },
                "mfa": {
                    "type": "boolean",
                    "example": true
                },
                "role": {
                    "type": "string",
                    "example": "User"
                },
                "userExpiration": {
                    "type": "string",
                    "example": "31/12/2024"
                },
                "username": {
                    "type": "string",
                    "example": "testuser"
                }
            }
        },
        "dto.UserSearchMetadata": {
            "type": "object",
            "properties": {
                "authMethodStats": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "expirationStats": {
                    "$ref": "#/definitions/dto.ExpirationStatistics"
                },
                "filteredTotal": {
                    "type": "integer",
                    "example": 150
                },
                "groupStats": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "roleStats": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "searchDuration": {
                    "type": "string",
                    "example": "125ms"
                },
                "unfilteredTotal": {
                    "type": "integer",
                    "example": 500
                }
            }
        },
        "dto.UserValidationError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "User is not currently connected"
                },
                "username": {
                    "type": "string",
                    "example": "testuser1"
                }
            }
        },
        "dto.VPNStatusResponse": {
            "type": "object",
            "properties": {
                "connected_users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ConnectedUserResponse"
                    }
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-06-14T15:08:06Z"
                },
                "total_connected_users": {
                    "type": "integer",
                    "example": 5
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and RSA256 JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.2.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "GoVPN API Enhanced with Advanced Redis Caching",
	Description:      "OpenVPN Access Server Management API with Bulk Operations, Advanced Search, and Comprehensive Redis Caching",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
